# Generated by Django 2.1.7 on 2019-03-18 07:50

from django.db import migrations
import re

def create_primary_classgroups(apps, schema_editor):
    TutorGroup = apps.get_model('school', 'TutorGroup')
    Student = apps.get_model('school', 'Student')
    ClassGroup = apps.get_model('school', 'ClassGroup')
    AcademicStructure = apps.get_model('school', 'AcademicStructure')
    all_classgroups = TutorGroup.objects.all()
    for tutor_group in all_classgroups:
        year = re.search(r'\d+', tutor_group.tgname).group()
        if int(year) < 7:
            students = Student.objects.filter(tutorgroup=tutor_group)
            # Create a class for english, maths and science:
            for subject in ('English', 'Mathematics', 'Sciences'):
                classgroup, created = ClassGroup.objects.get_or_create(groupname=str(tutor_group.tgname)+ subject)
                for student in students:
                    student.classgroups.add(classgroup)
                academic_parent = AcademicStructure.objects.get(name=subject)
                academic_parent.classgroups.add(classgroup)




class Migration(migrations.Migration):

    dependencies = [
        ('tracker', '0017_auto_20190318_1550'),
    ]

    operations = [
        migrations.RunPython(create_primary_classgroups)
    ]

