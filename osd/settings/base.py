"""
Django settings for osd project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import datetime
from django.contrib import messages

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!


# Application definition

INSTALLED_APPS = [
    'dal',
    'dal_select2',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tracker',
    'exambuilder',
    'school',
    'timetable',
    'searchableselect',
    'teachnet',
    'journal',
    'ckeditor',
    'dynamic_formsets',
    #'debug_toolbar',
    'django.contrib.admin',
    'social_django',
    'jchart',
    'crispy_forms',
    'mptt',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'osd.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',  # for social-auth
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'osd.wsgi.application'

# new

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# DB stored in settings_secret


LOGIN_URL = '/accounts/login'
LOGIN_REDIRECT_URL = '/'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Added for social-ath
# see https://fosstack.com/how-to-add-google-authentication-in-django/
AUTHENTICATION_BACKENDS = (
    'social_core.backends.open_id.OpenIdAuth',  # for Google authentication
    'social_core.backends.google.GoogleOpenId',  # for Google authentication
    'social_core.backends.google.GoogleOAuth2',  # for Google authentication

    'django.contrib.auth.backends.ModelBackend',
)

# See https://python-social-auth.readthedocs.io/en/latest/use_cases.html#associate-users-by-email

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.social_auth.associate_by_email',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kuala_Lumpur'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, '../../static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# For CKEditor - rich text

CKEDITOR_CONFIGS = {
    'default': {
        'width': '75%',
        'height': 100,

    },
    'large': {
        'toolbar': 'full',
        # 'extraPlugins': 'autogrow',
        'removeButtons': 'Save,Source,NewPage,Preview,Print,Templates,Cut,Copy,Paste,PasteText,PasteFromWord,Undo,Redo,Replace,Find,SelectAll,Scayt,Form,Checkbox,Radio,Textarea,TextField,Select,Button,ImageButton,HiddenField,CopyFormatting,RemoveFormat,Outdent,Indent,Blockquote,CreateDiv,JustifyRight,JustifyBlock,BidiLtr,BidiRtl,Language,Anchor,Unlink,Image,Flash,HorizontalRule,Iframe,PageBreak,ShowBlocks,Maximize,About',
        'width': '75%',
        'height': 100,

    },

    'small': {
        'toolbar': 'full',
        'removeButtons': 'Save,Source,NewPage,Preview,Print,Templates,Cut,Copy,Paste,PasteText,PasteFromWord,Undo,Redo,Replace,Find,SelectAll,Scayt,Form,Checkbox,Radio,Textarea,TextField,Select,Button,ImageButton,HiddenField,CopyFormatting,RemoveFormat,Outdent,Indent,Blockquote,CreateDiv,JustifyRight,JustifyBlock,BidiLtr,BidiRtl,Language,Anchor,Unlink,Image,Flash,HorizontalRule,Iframe,PageBreak,ShowBlocks,Maximize,About',

        'width': '100%',

        'height': 100,

    },
}

INTERNAL_IPS = [
    '127.0.0.1',
]

# ACADEMIC YEAR SETUP

# These lists should be for each academic year, in the following format:

# [2018-19, 2019-20, 2020-2021, etc...]

CALENDAR_START_MONDAY_DAY = [20, 19]
CALENDAR_START_MONTH = [8, 8]
CALENDAR_START_YEAR = [2018, 2019]

CALENDAR_END_DAY = [29, 1]
CALENDAR_END_MONTH = [6, 7]
CALENDAR_END_YEAR = [2019, 2020]



ACADEMIC_YEARS = {0: "2018-19",
                  1: "2019-20"}

# AUTOMATIC academic year setup - do not edit.

CALENDAR_START_DATE = []
CALENDAR_END_DATE = []

CURRENT_ACADEMIC_YEAR = 0
PRINTABLE_CUR_A_YEAR = ACADEMIC_YEARS[CURRENT_ACADEMIC_YEAR]

n = 0
for day in CALENDAR_END_DAY:

    CALENDAR_START_DATE.append(datetime.date(CALENDAR_START_YEAR[n], CALENDAR_START_MONTH[n], CALENDAR_START_MONDAY_DAY[n]))

    CALENDAR_END_DATE.append(datetime.date(CALENDAR_END_YEAR[n], CALENDAR_END_MONTH[n], CALENDAR_END_DAY[n]))
    n = n+1

CALENDAR_TOTAL_WEEKS = []
n = 0
for day in CALENDAR_START_DATE:
    monday1 = (CALENDAR_START_DATE[n] - datetime.timedelta(days=CALENDAR_START_DATE[n].weekday()))
    monday2 = (CALENDAR_END_DATE[n] - datetime.timedelta(days=CALENDAR_END_DATE[n].weekday()))
    CALENDAR_TOTAL_WEEKS.append((monday2 - monday1).days / 7)


# For error messages in bootstrap:

MESSAGE_TAGS = {
    messages.ERROR: 'danger'
}

CRISPY_TEMPLATE_PACK = 'bootstrap4'
